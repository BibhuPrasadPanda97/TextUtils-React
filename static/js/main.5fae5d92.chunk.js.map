{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","react_default","a","createElement","Fragment","className","ClassName","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","props","concat","mode","href","title","aria-label","react_router_dom","aria-current","to","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","Alert","alert","role","word","wordLower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5fae5d92.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n      <div ClassName=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n        <div ClassName=\"accordion-item\">\r\n          <h2 ClassName=\"accordion-header\" id=\"flush-headingOne\">\r\n            <button ClassName=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div id=\"flush-collapseOne\" ClassName=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n            <div ClassName=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\r\n          </div>\r\n        </div>\r\n        <div ClassName=\"accordion-item\">\r\n          <h2 ClassName=\"accordion-header\" id=\"flush-headingTwo\">\r\n            <button ClassName=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div id=\"flush-collapseTwo\" ClassName=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n            <div ClassName=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\r\n          </div>\r\n        </div>\r\n        <div ClassName=\"accordion-item\">\r\n          <h2 ClassName=\"accordion-header\" id=\"flush-headingThree\">\r\n            <button ClassName=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div id=\"flush-collapseThree\" ClassName=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n            <div ClassName=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    {/* Toggle Dark Mode */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n// Specifies the default values for props:\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here',\r\n    aboutText: 'About'\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text changed to UpperCase\", \"success\");\r\n    }\r\n\r\n    const handleLpClick = () => {\r\n        // console.log(\"Lowercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text changed to LowerCase\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared!!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n        // console.log(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState();\r\n    // let textLen = text.length;\r\n    return (\r\n        <>\r\n            <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'darkgrey':'white', color: props.mode==='dark'?'white':'black'}} id=\"textBoxInput\" rows=\"5\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Conver to UpperCase</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLpClick}>Conver to LowerCase</button>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h2>Your text Summary</h2>\r\n                {/* <p>{text.split(\" \").length} workds and {text.length} characters</p> */}\r\n                {/* <p>{0.008 * text.split(\" \").length} minutes to read</p> */}\r\n                <h3 className='mt-3'>Preview</h3>\r\n                {/* <p>{textLen>0 ? text:\"Enter some text to preview\"}</p> */}\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        let wordLower = word.toLowerCase();\r\n        return wordLower.charAt(0).toUpperCase() + wordLower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react'\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    // SetTimeout\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"#0A305A\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n      <Router>\n        {/* <Navbar title=\"TextUtils\" aboutText=\"About\" /> */}\n        {/* <Navbar/> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm heading=\"Enter the Text to analyze\" mode={mode} showAlert={showAlert} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}